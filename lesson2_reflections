Q1)What happens when you initialize a repository? Why do you need to do it?

A new folder .git is created that stores meta-data required to create a Git Repository. However, no commit is created as Git believes in manual commits rather than auto-commits.

Q2)How is the staging area different from the working directory and the repository? What value do you think it offers?

A staging area is essentially a "holding area" for changes to be committed the next time "git commit" is called.
It allows us to divide large changes in to small logical commits. We can only send files relevant to a given logical change into the staging area.
Staging area also helps us review the change we are planning to commit. This is because we have not yet committed the changes.

Q3)How can you use the staging area to make sure you have one commit per logical change?

See previous question.

Q4)What are some situations when branches would be helpful in keeping your history organized? How would branches help?

It is useful when one is making multiple versions of the same project to be used for different purposes. By making branches one can work on each version separately. For each version separate commits can be made. The chance of confusing  between the different versions is reduced.
Example:- Make easy,medium and difficult versions of the game using branches.
Example:- Solve same project using differnet algorithms(ex: greedy and dp) to check the more optimal algorithm.

Q5)How do the diagrams help you visualize the branch structure?

Node representation is easily done with the help of branches. Diagram closely mimics the real-life tree structure with multiple branches.

